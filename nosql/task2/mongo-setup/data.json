[
  {
    "dateOfCreation": "2021-06-07T14:00:00+03:00",
    "deadline": "2021-06-09T14:00:00+03:00",
    "name": "Task manager",
    "description": "Create console app. Task manager",
    "subtasks": [
      {
        "name": "1. Show all tasks",
        "description": "my description"
      },
      {
        "name": "2. Show overdue tasks",
        "description": "my description"
      },
      {
        "name": "3. Show tasks with specific category",
        "description": "my description"
      },
      {
        "name": "4. Show all subtasks of tasks with specific category",
        "description": "my description"
      },
      {
        "name": "5. Add task",
        "description": "my description"
      },
      {
        "name": "6. Update task",
        "description": "my description"
      },
      {
        "name": "7. Delete task",
        "description": "my description"
      },
      {
        "name": "8. Add subtasks",
        "description": "my description"
      },
      {
        "name": "9. Update subtasks",
        "description": "my description"
      },
      {
        "name": "10. Delete subtasks",
        "description": "my description"
      },
      {
        "name": "11. Full-text search by word in task description",
        "description": "my description"
      },
      {
        "name": "12. Full-text search by sub-task name",
        "description": "my description"
      }
    ],
    "category": "mongodb"
  },
  {
    "dateOfCreation": "2021-06-17T14:00:00+03:00",
    "deadline": "2021-06-19T14:00:00+03:00",
    "name": "Play with Mongodb",
    "description": "Adopt the pet app on SQL to NoSQL",
    "subtasks": [
      {
        "name": "Define data model for Mongo",
        "description": "The direct table-collection mapping is not the best idea."
      },
      {
        "name": "Write data migration job.",
        "description": "via SQL and MongoDriver operations"
      },
      {
        "name": "Use aggregation",
        "description": "Use aggregation mechanism to get grouped results from the database"
      },
      {
        "name": "Migrate in one transaction",
        "description": "Run this job in one transaction for SQL database and in one multi-document transaction for Mongo"
      },
      {
        "name": "Tune with indexes",
        "description": "Use appropriate indices to improve query performance"
      },
      {
        "name": "Make replica-set",
        "description": "Make a replica-set with 1 primary and 2 secondary nodes, execute your tests/client code over the Mongo cluster"
      }
    ],
    "category": "mongodb"
  },
  {
    "dateOfCreation": "2021-06-15T14:00:00+03:00",
    "deadline": "2021-06-17T14:00:00+03:00",
    "name": "The Cassandra Ring",
    "description": "The task related with Cassandra database.",
    "subtasks": [
      {
        "name": "Install Cassandra and use corresponding Java driver",
        "description": ""
      },
      {
        "name": "Build Cassandra cluster with 4 nodes.",
        "description": ""
      },
      {
        "name": "Balance the cluster and distribute keys.",
        "description": ""
      },
      {
        "name": "Provides screenshots of running cluster and filled tables",
        "description": ""
      },
      {
        "name": "Write performance test app which stores logs (logs can be tracked events with different structure) from your working app into Cassandra Cluster.",
        "description": ""
      },
      {
        "name": "Measure different useful statistics for log writing (throughput - avg, 95th percentile and so on).",
        "description": ""
      },
      {
        "name": "Provide simple admin operations (to edit logs) via Cassandra Java driver",
        "description": ""
      },
      {
        "name": "Use CQL to make queries for generating reports.",
        "description": ""
      },
      {
        "name": "List of desired reports and collected metrics should be provided by your mentor",
        "description": ""
      }
    ],
    "category": "cassandra"
  },
  {
    "dateOfCreation": "2021-06-15T14:00:00+03:00",
    "deadline": "2021-06-17T14:00:00+03:00",
    "name": "Social Network with Mongo",
    "description": "Write simple app with a few classes reflected typical Social Network (Users, Messages, Movies, Audio tracks, Friendships etc.). Keep more than 10^9 instances for each class into Mongo database using Mongo DB driver. Provide simple reporting based on Mongo Aggregation Framework",
    "subtasks": [
      {
        "name": "Average number of messages by day of week",
        "description": ""
      },
      {
        "name": "Max number of new friendships from month to month.",
        "description": ""
      },
      {
        "name": "Min number of watched movies by users with more than 100 friends.",
        "description": ""
      },
      {
        "name": "Play with different data models, do not fear to experiment with denormalization.",
        "description": ""
      },
      {
        "name": "Optionally (+5 bonus points) use appropriate indices to improve query performance.",
        "description": ""
      },
      {
        "name": "Optionally (+10 bonus points) make a replica-set with 1 primary and 2 secondary nodes, execute your tests/client code over the Mongo cluster.\n\n",
        "description": ""
      }
    ],
    "category": "mongodb"
  },
  {
    "dateOfCreation": "2021-06-10T14:00:00+03:00",
    "deadline": "2021-06-20T14:00:00+03:00",
    "name": "Social Network with Cassandra",
    "description": "Write simple app with a few classes reflected typical Social Network (Users, Messages, Movies, Audio tracks, Friendships etc.). Keep more than 10^9 instances for each class into Cassandra database using Cassandra DB driver. Provide simple reporting based on Cassandra Aggregation Framework",
    "subtasks": [
      {
        "name": "Take the model and data from the previous task and implement backend with Cassandra (build separate tables for each kind of report). Could we use Spring solution to reduce copy-paste and light-switching of NoSQL database from Mongo to Cassandra?",
        "description": ""
      },
      {
        "name": "(+5 bonus points) use appropriate indices to improve query performance",
        "description": ""
      },
      {
        "name": "(+5 bonus points) build Cassandra cluster with 4 nodes",
        "description": ""
      },
      {
        "name": "(+5 bonus points) balance the cluster and distribute keys",
        "description": ""
      },
      {
        "name": "(+5 bonus points) tune commitlog/memtable properties to reach better performance of your insert or select operations",
        "description": ""
      },
      {
        "name": "(+5 bonus points) measure performance of query execution and prepare simple performance report.",
        "description": ""
      }
    ],
    "category": "cassandra"
  }
]